[
  {
    "Id": "844371",
    "ThreadId": "358234",
    "Html": "\r\n<p>I have one sever that for some reason will not run Wolfpack. I am hoping some one has seen this before.</p>\r\n<p>It seems to be related to TopShelf but the exact same set of assemblies works on multiple other servers that are setup very similar.&nbsp; Below is the log file with the details of the exception.</p>\r\n<p>Any help figuring this our is much appreciated.</p>\r\n<p>&nbsp;</p>\r\n<p>2012-06-04 09:04:00,645 [6] ERROR Topshelf.Model.ServiceCoordinator [(null)] - Fault on Wolfpack: Topshelf.Exceptions.ServiceControlException<br>\r\nService Start Exception: Wolfpack (IRolePlugin)<br>\r\n&nbsp;&nbsp; at Topshelf.Builders.LocalServiceBuilder`1.StartService(T service) in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Config\\Builders\\LocalServiceBuilder.cs:line 69<br>\r\n&nbsp;&nbsp; at Topshelf.Model.LocalServiceController`1.CallAction[TBefore,TComplete](String text, Action`1 callback, Func`1 before, Func`1 complete) in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Model\\LocalServiceController.cs:line 153<br>\r\nHelpLink: <br>\r\n<br>\r\nCastle.MicroKernel.ComponentActivator.ComponentActivatorException<br>\r\nComponentActivator: could not proxy Wolfpack.Contrib.BuildAnalytics.Parsers.SpecFlowHtmlReportParser<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, Object[] arguments, Type[] signature) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line\r\n 166<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line 92<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line 70<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\AbstractComponentActivator.cs:line 75<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Lifestyle\\AbstractLifestyleManager.cs:line 42<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Handlers\\DefaultHandler.cs:line 61<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context, Boolean instanceRequired) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Handlers\\AbstractHandler.cs:line 771<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Handlers.AbstractHandler.TryResolve(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Handlers\\AbstractHandler.cs:line 376<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.DefaultKernel.TryResolveComponent(IHandler handler, Type service, IDictionary additionalArguments) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\DefaultKernel.cs:line 920<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.DefaultKernel.ResolveAll(Type service, IDictionary arguments) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\DefaultKernel_Resolve.cs:line 277<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.DefaultKernel.ResolveAll(Type service) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\DefaultKernel_Resolve.cs:line 250<br>\r\n&nbsp;&nbsp; at Castle.Windsor.WindsorContainer.ResolveAll[T]() in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\Windsor\\WindsorContainer.cs:line 887<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Containers.WindsorContainer.ResolveAll[T]() in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Containers\\WindsorContainer.cs:line 93<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Container.ResolveAll[T]() in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Container.cs:line 59<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Loaders.ContainerPluginLoader`1.Load(TI[]&amp; components) in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Loaders\\ContainerLoaders.cs:line 79<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Loaders.ContainerPluginLoader`1.Load(TI[]&amp; components, Action`1 action) in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Loaders\\ContainerLoaders.cs:line 90<br>\r\n&nbsp;&nbsp; at Wolfpack.Agent.Roles.Agent.Start() in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Agent\\Roles\\Agent.cs:line 85<br>\r\n&nbsp;&nbsp; at Wolfpack.Agent.Startup.&lt;&gt;c__DisplayClass8.&lt;Main&gt;b__6(IRolePlugin s) in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Agent\\Startup.cs:line 84<br>\r\n&nbsp;&nbsp; at Topshelf.Builders.LocalServiceBuilder`1.StartService(T service) in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Config\\Builders\\LocalServiceBuilder.cs:line 65<br>\r\nHelpLink: <br>\r\n<br>\r\nSystem.ArgumentException<br>\r\nUnable to obtain public key for StrongNameKeyPair.<br>\r\n&nbsp;&nbsp; at System.Reflection.StrongNameKeyPair.ComputePublicKey()<br>\r\n&nbsp;&nbsp; at System.Reflection.StrongNameKeyPair.get_PublicKey()<br>\r\n&nbsp;&nbsp; at System.Reflection.Emit.AssemblyBuilder..ctor(AppDomain domain, AssemblyName name, AssemblyBuilderAccess access, String dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions,\r\n StackCrawlMark&amp; stackMark, IEnumerable`1 unsafeAssemblyAttributes, SecurityContextSource securityContextSource)<br>\r\n&nbsp;&nbsp; at System.Reflection.Emit.AssemblyBuilder.InternalDefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, String dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions,\r\n StackCrawlMark&amp; stackMark, IEnumerable`1 unsafeAssemblyAttributes, SecurityContextSource securityContextSource)<br>\r\n&nbsp;&nbsp; at System.AppDomain.InternalDefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, String dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions, StackCrawlMark&amp;\r\n stackMark, IEnumerable`1 assemblyAttributes, SecurityContextSource securityContextSource)<br>\r\n&nbsp;&nbsp; at System.AppDomain.DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ModuleScope.CreateModule(Boolean signStrongName) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ModuleScope.cs:line 359<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ModuleScope.ObtainDynamicModuleWithStrongName() in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ModuleScope.cs:line 297<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ModuleScope.DefineType(Boolean inSignedModulePreferably, String name, TypeAttributes flags) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ModuleScope.cs:line 533<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.Emitters.ClassEmitter..ctor(ModuleScope modulescope, String name, Type baseType, IEnumerable`1 interfaces, TypeAttributes flags, Boolean forceUnsigned) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\Emitters\\ClassEmitter.cs:line\r\n 37<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InvocationTypeGenerator.GetEmitter(ClassEmitter class, Type[] interfaces, INamingScope namingScope, MethodInfo methodInfo) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InvocationTypeGenerator.cs:line\r\n 102<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InvocationTypeGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InvocationTypeGenerator.cs:line\r\n 51<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\InterfaceProxyTargetContributor.cs:line\r\n 98<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\InterfaceProxyTargetContributor.cs:line\r\n 63<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.CompositeTypeContributor.ImplementMethod(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\CompositeTypeContributor.cs:line\r\n 140<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\CompositeTypeContributor.cs:line 83<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InterfaceProxyWithTargetGenerator.cs:line\r\n 114<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.&lt;&gt;c__DisplayClass1.&lt;GenerateCode&gt;b__0(String n, INamingScope s) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InterfaceProxyWithTargetGenerator.cs:line\r\n 52<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3 factory) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\BaseProxyGenerator.cs:line 386<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.GenerateCode(Type proxyTargetType, Type[] interfaces, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InterfaceProxyWithTargetGenerator.cs:line\r\n 52<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.DefaultProxyBuilder.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\DefaultProxyBuilder.cs:line\r\n 102<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ProxyGenerator.cs:line\r\n 314<br>\r\n&nbsp;&nbsp; at Castle.Windsor.Proxy.DefaultProxyFactory.Create(IKernel kernel, Object target, ComponentModel model, CreationContext context, Object[] constructorArguments) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\Windsor\\Proxy\\DefaultProxyFactory.cs:line\r\n 130<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, Object[] arguments, Type[] signature) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line\r\n 151<br>\r\nHelpLink: <br>\r\n<br>\r\n<br>\r\n2012-06-04 09:04:00,672 [5] ERROR Topshelf.Model.ServiceWorkflow [(null)] - [Wolfpack] Fault: Topshelf.Exceptions.ServiceControlException<br>\r\nService Start Exception: Wolfpack (IRolePlugin)<br>\r\n&nbsp;&nbsp; at Topshelf.Builders.LocalServiceBuilder`1.StartService(T service) in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Config\\Builders\\LocalServiceBuilder.cs:line 69<br>\r\n&nbsp;&nbsp; at Topshelf.Model.LocalServiceController`1.CallAction[TBefore,TComplete](String text, Action`1 callback, Func`1 before, Func`1 complete) in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Model\\LocalServiceController.cs:line 153<br>\r\nHelpLink: <br>\r\n<br>\r\nCastle.MicroKernel.ComponentActivator.ComponentActivatorException<br>\r\nComponentActivator: could not proxy Wolfpack.Contrib.BuildAnalytics.Parsers.SpecFlowHtmlReportParser<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, Object[] arguments, Type[] signature) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line\r\n 166<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line 92<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line 70<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\AbstractComponentActivator.cs:line 75<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Lifestyle\\AbstractLifestyleManager.cs:line 42<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Handlers\\DefaultHandler.cs:line 61<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context, Boolean instanceRequired) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Handlers\\AbstractHandler.cs:line 771<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.Handlers.AbstractHandler.TryResolve(CreationContext context) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\Handlers\\AbstractHandler.cs:line 376<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.DefaultKernel.TryResolveComponent(IHandler handler, Type service, IDictionary additionalArguments) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\DefaultKernel.cs:line 920<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.DefaultKernel.ResolveAll(Type service, IDictionary arguments) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\DefaultKernel_Resolve.cs:line 277<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.DefaultKernel.ResolveAll(Type service) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\DefaultKernel_Resolve.cs:line 250<br>\r\n&nbsp;&nbsp; at Castle.Windsor.WindsorContainer.ResolveAll[T]() in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\Windsor\\WindsorContainer.cs:line 887<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Containers.WindsorContainer.ResolveAll[T]() in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Containers\\WindsorContainer.cs:line 93<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Container.ResolveAll[T]() in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Container.cs:line 59<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Loaders.ContainerPluginLoader`1.Load(TI[]&amp; components) in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Loaders\\ContainerLoaders.cs:line 79<br>\r\n&nbsp;&nbsp; at Wolfpack.Core.Loaders.ContainerPluginLoader`1.Load(TI[]&amp; components, Action`1 action) in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Core\\Loaders\\ContainerLoaders.cs:line 90<br>\r\n&nbsp;&nbsp; at Wolfpack.Agent.Roles.Agent.Start() in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Agent\\Roles\\Agent.cs:line 85<br>\r\n&nbsp;&nbsp; at Wolfpack.Agent.Startup.&lt;&gt;c__DisplayClass8.&lt;Main&gt;b__6(IRolePlugin s) in c:\\Projects\\Wolfpack\\Trunk\\Releases\\v2.4.0\\Source\\Wolfpack.Agent\\Startup.cs:line 84<br>\r\n&nbsp;&nbsp; at Topshelf.Builders.LocalServiceBuilder`1.StartService(T service) in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Config\\Builders\\LocalServiceBuilder.cs:line 65<br>\r\nHelpLink: <br>\r\n<br>\r\nSystem.ArgumentException<br>\r\nUnable to obtain public key for StrongNameKeyPair.<br>\r\n&nbsp;&nbsp; at System.Reflection.StrongNameKeyPair.ComputePublicKey()<br>\r\n&nbsp;&nbsp; at System.Reflection.StrongNameKeyPair.get_PublicKey()<br>\r\n&nbsp;&nbsp; at System.Reflection.Emit.AssemblyBuilder..ctor(AppDomain domain, AssemblyName name, AssemblyBuilderAccess access, String dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions,\r\n StackCrawlMark&amp; stackMark, IEnumerable`1 unsafeAssemblyAttributes, SecurityContextSource securityContextSource)<br>\r\n&nbsp;&nbsp; at System.Reflection.Emit.AssemblyBuilder.InternalDefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, String dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions,\r\n StackCrawlMark&amp; stackMark, IEnumerable`1 unsafeAssemblyAttributes, SecurityContextSource securityContextSource)<br>\r\n&nbsp;&nbsp; at System.AppDomain.InternalDefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, String dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions, StackCrawlMark&amp;\r\n stackMark, IEnumerable`1 assemblyAttributes, SecurityContextSource securityContextSource)<br>\r\n&nbsp;&nbsp; at System.AppDomain.DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ModuleScope.CreateModule(Boolean signStrongName) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ModuleScope.cs:line 359<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ModuleScope.ObtainDynamicModuleWithStrongName() in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ModuleScope.cs:line 297<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ModuleScope.DefineType(Boolean inSignedModulePreferably, String name, TypeAttributes flags) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ModuleScope.cs:line 533<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.Emitters.ClassEmitter..ctor(ModuleScope modulescope, String name, Type baseType, IEnumerable`1 interfaces, TypeAttributes flags, Boolean forceUnsigned) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\Emitters\\ClassEmitter.cs:line\r\n 37<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InvocationTypeGenerator.GetEmitter(ClassEmitter class, Type[] interfaces, INamingScope namingScope, MethodInfo methodInfo) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InvocationTypeGenerator.cs:line\r\n 102<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InvocationTypeGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InvocationTypeGenerator.cs:line\r\n 51<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\InterfaceProxyTargetContributor.cs:line\r\n 98<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\InterfaceProxyTargetContributor.cs:line\r\n 63<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.CompositeTypeContributor.ImplementMethod(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\CompositeTypeContributor.cs:line\r\n 140<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Contributors.CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Contributors\\CompositeTypeContributor.cs:line 83<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InterfaceProxyWithTargetGenerator.cs:line\r\n 114<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.&lt;&gt;c__DisplayClass1.&lt;GenerateCode&gt;b__0(String n, INamingScope s) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InterfaceProxyWithTargetGenerator.cs:line\r\n 52<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3 factory) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\BaseProxyGenerator.cs:line 386<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.GenerateCode(Type proxyTargetType, Type[] interfaces, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\Generators\\InterfaceProxyWithTargetGenerator.cs:line\r\n 52<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.DefaultProxyBuilder.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\DefaultProxyBuilder.cs:line\r\n 102<br>\r\n&nbsp;&nbsp; at Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors) in e:\\OSS.Code\\Castle.Core\\src\\Castle.Core\\DynamicProxy\\ProxyGenerator.cs:line\r\n 314<br>\r\n&nbsp;&nbsp; at Castle.Windsor.Proxy.DefaultProxyFactory.Create(IKernel kernel, Object target, ComponentModel model, CreationContext context, Object[] constructorArguments) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\Windsor\\Proxy\\DefaultProxyFactory.cs:line\r\n 130<br>\r\n&nbsp;&nbsp; at Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, Object[] arguments, Type[] signature) in e:\\OSS.Code\\Castle.Windsor\\src\\Castle.Windsor\\MicroKernel\\ComponentActivator\\DefaultComponentActivator.cs:line\r\n 151<br>\r\nHelpLink: <br>\r\n<br>\r\n<br>\r\n2012-06-04 09:04:01,643 [1] ERROR Topshelf.Hosts.ConsoleRunHost [(null)] - An exception occurred<br>\r\nTopshelf.Exceptions.TopshelfException: At least one configured service failed to start<br>\r\n&nbsp;&nbsp; at Topshelf.Model.ServiceCoordinator.WaitUntilServicesAreRunning(IEnumerable`1 services, TimeSpan timeout) in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Model\\ServiceCoordinator.cs:line 223<br>\r\n&nbsp;&nbsp; at Topshelf.Model.ServiceCoordinator.Start() in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Model\\ServiceCoordinator.cs:line 116<br>\r\n&nbsp;&nbsp; at Topshelf.Hosts.ConsoleRunHost.Run() in d:\\BuildAgent-01\\work\\799c08e77fef999d\\src\\Topshelf\\Hosts\\ConsoleRunHost.cs:line 65</p>\r\n",
    "PostedDate": "2012-06-04T06:06:27.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "844391",
    "ThreadId": "358234",
    "Html": "<p>ok two things stick out -&nbsp;</p>\r\n<ol>\r\n<li>Unable to obtain public key for StrongNameKeyPair.</li>\r\n<li>could not proxy Wolfpack.Contrib.BuildAnalytics.Parsers.SpecFlowHtmlReportParser</li>\r\n</ol>\r\n<p>Out of interest have you tried to copy the entire install to another machine and see what happens when it starts? If <strong>exactly</strong> the same install runs then it must be a problem specific to the machine it does not run on (.net install?). If it fails with the same issue then the problem is local to the install/config.</p>\r\n<p>If the latter then try stripping back the configs until it start working - if it's still not working and you don't mind then zip the entire install up and send it to me and I'll see if I can track down the issue and if there are any Wolfpack tweaks that can be made to demystify the error (better error handling/reporting).</p>\r\n<p>Let me know how you get on.</p>\r\n<p>James</p>",
    "PostedDate": "2012-06-04T06:56:34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "844422",
    "ThreadId": "358234",
    "Html": "<p>Ya, it is definitely this machine. I have the exact same setup running on several others. This machine is the issue. I run a lot of other .Net stuff on this machine. So I had not considered the idea that .net install could be the issue. I will try reinstalling it and see what happens.</p>\r\n<p>You called out the 2 things that jump out but make no other reference to them. Is there something I could look at in relation?</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks for your help.</p>\r\n<p>John</p>",
    "PostedDate": "2012-06-04T07:57:23.603-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "844440",
    "ThreadId": "358234",
    "Html": "<p>Ok, Looks like I found the issue. It was not the .net install. But it was the fact that I could not create the proxy keys for the dynamically created/loaded assemblies that are used by top shelf. I found this <a href=\"http://stackoverflow.com/questions/5659740/unable-to-obtain-public-key-for-strongnamekeypair\" target=\"_blank\">post</a> on StackOverflow related to the first item you pointed out. \"Unable to obtain public key for StrongNameKeyPair.\" <br /><br />I then set this system to create the key in my local profile and tried wolfPack again and it worked.</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you for your help,</p>\r\n<p>--John</p>",
    "PostedDate": "2012-06-04T08:33:34.133-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "844471",
    "ThreadId": "358234",
    "Html": "<p>Funnily enough I had exactly the same problem on a new locked down dev laptop last month that wouldn't run Moq correctly (same dynamic proxy exception) - shame on me for not putting two and two together when I saw \"proxy\" and \"strong name key\" in the original report!</p>\r\n<p>Anyway - great detective work and good to hear you are up and running again.</p>\r\n<p>J</p>",
    "PostedDate": "2012-06-04T09:16:42.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]